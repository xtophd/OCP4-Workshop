
##
##
 ##
  ##
   ##
    ##
    ##    !! WARNING !!  Ansible only interprets 'True' and 'False'
    ##                   as booleans.  Other values such as 'true' or
    ##                   'false' would be interpreted as strings and
    ##                   would break various logic tests.  So only
    ##                   use unquoted True and False!!!
   ##
  ##
 ##
##
##

[all:vars]

## ----------------------------------------
##     Openshift Deployment Parameters
##
##     g_clusterVersion 
##     g_wildcardName 
##     g_clusterUser
##     g_credsDir

g_clusterVersion = "4.7"
g_clusterAdmin   = "cloud-admin"
g_clusterUser    = "cloud-user"
g_credsDir       = "/root/ocp-{{ g_clusterName}}"
g_credsDir       = "/root/ocp-{{ g_clusterName}}"
g_wildcardName   = "apps"

##
## ----------------------------------------
## Proxy settings (affects playbooks and openshift config)
##
##   Examples:
##     g_http_proxy = httpProxy: http://<username>:<pswd>@<ip>:<port>
##     g_https_proxy = httpsProxy: http://<username>:<pswd>@<ip>:<port>
##     g_no_proxy = noProxy: example.com

g_http_proxy  = ""
g_https_proxy = ""
g_no_proxy    = ""

## ----------------------------------------
##     Bastion Configuration Parameters
##

g_useFIREWALLD          = True
g_useDNS                = True
g_useDHCP               = True
g_usePXE                = True
g_useUEFI_HTTP          = True
g_useHAPROXY            = True
g_useHAPROXY_VIP        = True
g_useMATCHBOX           = True
g_useNFS                = True
g_useNTP                = True
g_useDNSwildcard        = True
g_useCOCKPIT            = True
g_useDESKTOP_GUI        = False
g_useCHROME             = False
g_useWORKSHOP_USER      = True
g_useWORKSHOP_MATERIALS = True


g_nfsExport       = "/home/nfs-{{ g_clusterName }}"

## ----------------------------------------
##    g_clusterName
##
##    used with network basedomain to create 
##    unique network domain for the cluster
##

g_clusterName = "ocp4mixed"

## ----------------------------------------
##    g_clusterVIP
##
##    If you are planning to run a loadbalancer (haproxy)
##    on a host other than the bastion (ie: the virt-host perhaps)
##    specify the cluster virtual IP (VIP).  This is only
##    used to create an additional haproxy.cfg and does
##    not impact the cluster configuration or deployment
##

g_clusterVIP = ""

##
## ----------------------------------------
##    g_network0_*
##
##    Parameters for the default network
##
##    NOTE: sticking with older workshop variable names
##          to preserve compatibility
##

g_publicNet     = True
g_publicDomain  = "example.com"
g_pubNET        = "192.168.116.0"
g_pubNM         = "255.255.255.0"
g_pubBC         = "192.168.116.255"
g_pubPREFIX     = "24"
g_pubGW         = "192.168.116.1"
g_pubDNS        = "192.168.116.1"
g_pubNTP        = "192.168.116.1"
g_pubFQDN       = "{{ g_clusterName }}.{{ g_publicDomain }}"

##
## ----------------------------------------
##
## This has the effect of changing the default domainname so
## we won't have to specify FQDN in host vars section below
##

ansible_host = "{{ inventory_hostname }}.{{ g_pubFQDN }}"

##
## ----------------------------------------
##
## h_rhcosDEV : default is 'vda'
##    If RHCOS is not detecting the right boot device, you can be specific
##    by modifying this paramenter (examples: sda, vda, nvmen0)
##
## h_rhcosNIC : default is 'dhcp'
##    If RHCOS is not detecting the right network device, you can be specific
##    by modifying this paramenter (examples: eth0:dhcp, ens3:dhcp, ens192:dhcp)
##
## h_rhcosUSBdelay : default is '0'
##    Some baremetal nodes (ie: HP DL360) have usb storage cards in the LOM
##    that confuses kernel and moves the boot disk around (maybe it's sda, maybe
##    next time it's sdb).  Set this to delay the USB storage scan by X seconds.
##    A good value might be h_rhcosUSBdelay = '10'
##
## ** NOTE **  You can also declare these in the [hostgroup:vars] or for each individual host
##

h_rhcosDEV      = "vda"
h_rhcosNIC      = "dhcp"
h_rhcosUSBdelay = "0"
h_rhcosLOADER   = "bios"

##
## ----------------------------------------
## HOSTGROUP VARS

[myDeployhost:vars]

ansible_connection=local

## -----------------

[myBastion:vars]

h_hwPROF = "kvm_vda"
h_rsPROF = "bastion"
h_ksPROF = "rhel82-bootiso"

## -----------------

[myBootstrap:vars]

h_hwPROF = "kvm_vda"
h_rsPROF = "med"
h_ksPROF = "pxe_wait"

## -----------------

[myMasters:vars]

h_hwPROF = "dell_r630"
h_rsPROF = "med"
h_ksPROF = "pxe_nowait"

h_rhcosDEV      = "sda"
h_rhcosNIC      = "eno4:dhcp"
h_rhcosUSBdelay = "10"

## -----------------

[myWorkers:vars]

h_hwPROF = "dell_r630"
h_rsPROF = "sml"
h_ksPROF = "pxe_nowait"

h_rhcosDEV      = "sda"
h_rhcosNIC      = "eno4:dhcp"
h_rhcosUSBdelay = "10"


##
## ----------------------------------------
## HOST VARS

[myDeployhost]
deployer.example.com h_pubIP="192.168.116.100"

[myBastion]
bastion              h_pubIP="192.168.116.130"

[myBootstrap]
bootstrap            h_pubIP="192.168.116.134"

[myMasters]
node1                h_pubIP="192.168.116.131" h_pubMAC="AA:BB:CC:DD:EE:FF" h_etcdName="etcd-0" h_rhcosLOADER="efi" ipmi_fqdn="node1.ipmi.example.com"
node2                h_pubIP="192.168.116.132" h_pubMAC="AA:BB:CC:DD:EE:FF" h_etcdName="etcd-1" h_rhcosLOADER="efi" ipmi_fqdn="node2.ipmi.example.com"
node3                h_pubIP="192.168.116.133" h_pubMAC="AA:BB:CC:DD:EE:FF" h_etcdName="etcd-2" h_rhcosLOADER="efi" ipmi_fqdn="node3.ipmi.example.com"

[myWorkers]

[myShelter]
