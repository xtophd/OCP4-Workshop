
##
##
 ##
  ##
   ##
    ##
    ##    !! WARNING !!  Ansible only interprets 'True' and 'False'
    ##                   as booleans.  Other values such as 'true' or 
    ##                   'false' would be interpreted as strings and
    ##                   would break various logic tests.  So only
    ##                   use unquoted True and False!!!
   ##
  ##
 ##
##
##

[all:vars]

## ----------------------------------------
##    g_clusterName
##
##    used with network basedomain to create 
##    unique network domain for the cluster
##

g_clusterName = "ocp4rhv"

## ----------------------------------------
##     Openshift Deployment Parameters
##
##     g_clusterVersion 
##     g_wildcardName 
##     g_clusterUser
##     g_credsDir

g_clusterVersion = "4.6"
g_clusterAdmin   = "cloud-admin"
g_clusterUser    = "cloud-user"
g_credsDir       = "/root/ocp-{{ g_clusterName}}"
g_wildcardName   = "apps"

##
## ----------------------------------------
##     Proxy settings 
##
##       Examples:
##         g_http_proxy = httpProxy: http://<username>:<pswd>@<ip>:<port>
##         g_https_proxy = httpsProxy: http://<username>:<pswd>@<ip>:<port>
##         g_no_proxy = noProxy: example.com
##

g_http_proxy  = ""
g_https_proxy = ""
g_no_proxy    = ""

## ----------------------------------------
##     Bastion Configuration Parameters
##

g_useFIREWALLD          = True
g_useDNS                = True
g_useDHCP               = True
g_usePXE                = True
g_useUEFI_HTTP          = True
g_useHAPROXY            = True
g_useHAPROXY_VIP        = True
g_useMATCHBOX           = True
g_useNFS                = True
g_useNTP                = True
g_useDNSwildcard        = True
g_useDESKTOP_GUI        = False
g_useCHROME             = True
g_useVNCSERVER          = True
g_useWORKSHOP_USER      = True
g_useWORKSHOP_MATERIALS = True

g_nfsExport       = "/home/nfs-{{ g_clusterName }}"


## ----------------------------------------
##    g_clusterVIP
##
##    If you are planning to run a loadbalancer (haproxy)
##    on a host other than the bastion (ie: the virt-host perhaps)
##    specify the cluster virtual IP (VIP).  This is only
##    used to create an additional haproxy.cfg and does
##    not impact the cluster configuration or deployment
##

g_clusterVIP = ""

##
## ----------------------------------------
##    g_deployhostIP
##
##    IP address of the "deployhost". This
##    is used in the configs to identify
##    numerous services used in support of
##    provisioning systems
##

g_deployhostIP  = "192.168.1.170"

##
## ----------------------------------------
##    g_network0_*
##
##    Parameters for the default network
##
##    NOTE: sticking with older workshop variable names
##          to preserve compatibility
##

g_publicNet     = True
g_publicDomain  = "example.com"
g_pubNET        = "192.168.1.0"
g_pubNM         = "255.255.255.0"
g_pubBC         = "192.168.1.255"
g_pubPREFIX     = "24"
g_pubGW         = "192.168.1.1"
g_pubDNS        = "192.168.1.30"
g_pubNTP        = "192.168.1.60"
g_pubFQDN       = "{{ g_clusterName }}.{{ g_publicDomain }}"

##
## ----------------------------------------
##
## This has the effect of changing the default domainname so
## we won't have to specify FQDN in host vars section below
##

ansible_host = "{{ inventory_hostname }}.{{ g_pubFQDN }}"

##
## ----------------------------------------
##
## h_rhcosDEV : default is 'vda'
##    If RHCOS is not detecting the right boot device, you can be specific
##    by modifying this paramenter (examples: sda, vda, nvmen0)
##
## h_rhcosNIC : default is 'dhcp'
##    If RHCOS is not detecting the right network device, you can be specific
##    by modifying this paramenter (examples: eth0:dhcp, ens3:dhcp, ens192:dhcp)
##    It uses the dracut style as documented in dracut.cmdline(7) man page
##    ip=__IP_address__:__peer__:__gateway_IP_address__:__net_mask__:__host_name__:__interface_name__:__configuration_method__
##
## h_rhcosUSBdelay : default is '0'
##    Some baremetal nodes (ie: HP DL360) have usb storage cards in the LOM
##    that confuses kernel and moves the boot disk around (maybe it's sda, maybe
##    next time it's sdb).  Set this to delay the USB storage scan by X seconds.
##    A good value might be h_rhcosUSBdelay = '10'
##
## ** NOTE **  You can also declare these in the [hostgroup:vars] or for each individual host
##

h_rhcosDEV      = "sda"
h_rhcosNIC      = "dhcp"
h_rhcosUSBdelay = "0"

##
## ----------------------------------------
## HOSTGROUP VARS

[myDeployhost:vars]

ansible_connection=local

## -----------------

[myBastion:vars]

h_hwPROF = "ovirt_ocs4workshop"
#h_hwPROF = "ovirt_vda"
#h_hwPROF = "ovirt_sda"

h_rsPROF = "ocp_bastion"

## Using RHEL 8 
h_ksPROF = "rhel84-bootiso"
h_netDEV = "ens3"

## Using RHEL 7
#h_ksPROF = "rhel79-bootiso"
#h_netDEV = "eth0"

## Using CENTOS 7
#h_ksPROF = "centos7-netinstall"
#h_netDEV = "eth0"

## -----------------

[myBootstrap:vars]

h_hwPROF = "ovirt_ocs4workshop"
h_rsPROF = "ocp_bastion"
h_ksPROF = "pxe_nowait"

## -----------------

[myMasters:vars]

h_hwPROF = "ovirt_ocs4workshop"
h_rsPROF = "ocp_master"
h_ksPROF = "pxe_nowait"

## -----------------

[myWorkers:vars]

h_hwPROF = "ovirt_ocs4workshop"
#h_rsPROF = "ocp_worker"
h_rsPROF = "ocp_worker_odf"
h_ksPROF = "pxe_nowait"

##
## ----------------------------------------
## HOST VARS

[myDeployhost]
deployer  h_pubIP="192.168.1.170"

[myBastion]
bastion   h_pubIP="192.168.1.180"

[myBootstrap]
node1     h_pubIP="192.168.1.181"

[myMasters]
node2     h_pubIP="192.168.1.182" h_etcdName="etcd-0"
node3     h_pubIP="192.168.1.183" h_etcdName="etcd-1"
node4     h_pubIP="192.168.1.184" h_etcdName="etcd-2"

[myWorkers]
node5     h_pubIP="192.168.1.185"
node6     h_pubIP="192.168.1.186"
node7     h_pubIP="192.168.1.187"

[myShelter]
