
##                   values such as 'true' or 'false' would be 
##                   interpreted as strings and would break various
##                   logic tests.  
##
##                   When reading YML files, booleans can take on
##                   many forms and be interpreted correctly.
##
##                   For consistency, only use unquoted booleans: True & False

all: 

  vars:

    ## ----------------------------------------
    ##    Globals that will be phased out

    g_clusterAdmin:       "cloud-admin"
    g_clusterUser:        "cloud-user"


    ## ----------------------------------------
    ##    Workshop Variables

    workshop_vars:

      clustername:          "{{ t_cluster_name }}"

      ocp_version:          "4.11"
      ocp_admin_user:       "cloud-admin"
      ocp_user:             "cloud-user"
      ocp_dns_wildcard:     "{{ t_cluster_wildcard }}"
      ocp_vip_cluster:      "{{ t_cluster_loadbalancer_ip }}"
      ocp_vip_api:          "{{ t_cluster_api_ip }}"
      ocp_provisioner:      "{{ t_cluster_provisioner }}"

      network_basedomain:   "{{ t_network_basedomain }}"
      network_network:      "{{ t_network_id }}"
      network_netmask:      "{{ t_network_netmask }}"
      network_broadcast:    "{{ t_network_broadcast }}"
      network_prefix:       "{{ t_network_prefix }}"
      network_gateway:      "{{ t_network_gateway }}"
      network_nameserver:   "{{ t_network_dns_server }}"
      network_timeserver:   "{{ t_network_time_server }}"

      http_proxy:           ""
      https_proxy:          ""

      bastion:

        assisted_installer: True
        firewalld:          True
        cockpit:            False
        dns:                True
        dhcp:               True
        dhcp_pxe:           True
        dhcp_uefi_http:     True
        haproxy:            True
        matchbox:           True
        nfs:                True
        ntp:                True
        squid:              False
        workshop_user:      True
        workshop_materials: True
        desktop_gui:        False
        desktop_chrome:     False
        desktop_vnc:        False

    workshop_extras:

      network_fqdn:         "{{ t_cluster_name }}.{{ t_network_basedomain }}"

      ocp_creds_dir:        "/root/ocp-{{ t_cluster_name }}"

      ocp_wfqdn:            "{{ t_cluster_wildcard }}.{{ t_cluster_name }}.{{ t_network_basedomain }}"

      nfs_export:           "/home/nfs-{{ t_cluster_name }}"

      squid_http_url:       "http://bastion.{{ t_cluster_name }}.{{ t_network_basedomain }}:3128"

      squid_https_url:      ""



    ## ----------------------------------------
    ##    Xtoph Deploy Variables

    xtoph_vars:

      deployhost_ip:       "{{ t_ansible_ip }}" 
      clustername:         "{{ t_cluster_name }}"

      tmp_dir:             "/home/tmp/{{ t_cluster_name }}/{% raw %}{{ inventory_hostname_short }}{% endraw %}"



## ----------------------------------------
## HOSTGROUPS & VARS
## ----------------------------------------

myLibvirtHosts:

  hosts:

{% if t_virthost_fqdn is defined and t_virthost_fqdn|length %}
    {{ t_virthost_fqdn }}:
      h_pubIP:       "{{ t_virthost_ip }}"
      h_plPROF:      "custom_kvmhost"
{% endif %}

### -----------------

myDeployhost:
  hosts:

    deployer:
      h_pubIP:       "{{ t_ansible_ip }}"

  vars:
    ansible_connection: local

### -----------------

myBastion:
  hosts:

    bastion:
      h_pubIP:       "{{ t_addr_bastion }}" 

  vars:
    ansible_host:    "{% raw %}{{ inventory_hostname }}{% endraw %}.{{ t_cluster_name }}.{{ t_network_basedomain }}"

    h_hwPROF:        "kvm_vda"
    h_plPROF:        "custom_kvmhost"
    h_rsPROF:        "custom_bastion"
    h_ksPROF:        "rhel84-bootiso"
    h_netDEV:        "enp1s0"
    h_blkDEV:        "vda"

### -----------------

myBootstrap:
  hosts:

{% if t_addr_bootstrap is defined and t_addr_bootstrap|length %}
    bootstrap:
      h_pubIP:       "{{ t_addr_bootstrap }}" 
{% endif %}

  vars: 
    ansible_host:    "{% raw %}{{ inventory_hostname }}{% endraw %}.{{ t_cluster_name }}.{{ t_network_basedomain }}"

    h_hwPROF:        "kvm_vda"
    h_plPROF:        "custom_kvmhost"
    h_rsPROF:        "med"
    h_ksPROF:        "custom_kickstart"
    h_isoURL:        "http://{{ t_addr_bastion }}:8008/assets/{{ t_cluster_name }}.iso"

    h_rhcosDEV:      "vda"
    h_rhcosNIC:      "dhcp"
    h_rhcosUSBdelay: "0"
    h_rhcosLOADER:   "bios"

### -----------------

myMasters:
  hosts:

    master1:
      h_pubIP:       "{{ t_addr_master1 }}" 
      h_hwPROF:      "{{ t_hw_master1 }}"

{% if t_addr_master2 is defined and t_addr_master2|length %}
    master2:
      h_pubIP:       "{{ t_addr_master2 }}" 
      h_hwPROF:      "{{ t_hw_master3 }}"
{% endif %}

{% if t_addr_master3 is defined and t_addr_master3|length %}
    master3:
      h_pubIP:       "{{ t_addr_master3 }}" 
      h_hwPROF:      "{{ t_hw_master3 }}"
{% endif %}

  vars: 
    ansible_host:    "{% raw %}{{ inventory_hostname }}{% endraw %}.{{ t_cluster_name }}.{{ t_network_basedomain }}"

    h_plPROF:        "baremetal"
    h_ksPROF:        "vmedia_nowait"
    h_rsPROF:        "custom_master"
    h_isoURL:        "http://{{ t_addr_bastion }}:8008/assets/{{ t_cluster_name }}.iso"

    h_rhcosDEV:      "sda"
    h_rhcosNIC:      "dhcp"
    h_rhcosUSBdelay: "0"
    h_rhcosLOADER:   "efi"

### -----------------

myWorkers:
  hosts:

{% if t_addr_worker1 is defined and t_addr_worker1|length %}
    worker1:
      h_pubIP:       "{{ t_addr_worker1 }}" 
      h_hwPROF:      "{{ t_hw_worker1 }}"
{% endif %}

{% if t_addr_worker2 is defined and t_addr_worker2|length %}
    worker2:
      h_pubIP:       "{{ t_addr_worker2 }}" 
      h_hwPROF:      "{{ t_hw_worker2 }}"
{% endif %}

  vars: 
    ansible_host:    "{% raw %}{{ inventory_hostname }}{% endraw %}.{{ t_cluster_name }}.{{ t_network_basedomain }}"

    h_plPROF:        "baremetal"
    h_ksPROF:        "vmedia_nowait"
    h_rsPROF:        "custom_worker"
    h_isoURL:        "http://{{ t_addr_bastion }}:8008/assets/{{ t_cluster_name }}.iso"

    h_rhcosDEV:      "sda"
    h_rhcosNIC:      "dhcp"
    h_rhcosUSBdelay: "0"
    h_rhcosLOADER:   "efi"
