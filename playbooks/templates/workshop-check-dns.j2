#!/bin/bash

export KUBECONFIG={{ g_credsDir }}/auth/kubeconfig


##
## Some solutions used here come from:
##     https://access.redhat.com/solutions/3804501
##

echo "Workshop configuration details"
echo "------------------------------"
echo "Bastion IP address ....................... {{ f_bastion_ip }}"
echo "Upstream DNS provider (g_pubDNS) ......... {{ g_pubDNS }}"
echo "Bastion DNS service enabled (g_useDNS) ... {{ g_useDNS }}"
echo ""



echo "Check nodes: /etc/resolv.conf"
echo "-----------------------------"
for i in `oc get nodes -o custom-columns="Node Name:.metadata.name" --no-headers` ; do
    echo -n "$i: "
    ssh core@$i grep nameserver /etc/resolv.conf | awk '{ printf "%s ", $2 }'
    echo ""
done
echo ""



echo "Check dns operator health"
echo "-------------------------"
oc get clusteroperator dns
echo ""



echo "Check dns pod health"
echo "--------------------"
oc get pod -n openshift-dns-operator  
echo ""



##    Alternative, but too much info for now
#echo "Check dns pod health"
#echo "--------------------"
#oc get all -n openshift-dns-operator  



echo "Check dns service health"
echo "------------------------"
oc get service -n openshift-dns
echo ""



echo "List dns pod IPs and Node IPs"
echo "-----------------------------"
oc get pods -n openshift-dns -o custom-columns="Pod Name:.metadata.name,Pod IP:.status.podIP,Node IP:.status.hostIP,Status:.status.phase"
echo ""



echo "Check pods (apiserver): /etc/resolv.conf"
echo "----------------------------------------"
export PODS=`oc get pods -o=jsonpath="{.items[*].metadata.name}" -n openshift-apiserver`
for pod in $PODS; do 
    echo -n "$pod: "
    oc exec $pod -n openshift-apiserver -- grep nameserver /etc/resolv.conf 2>/dev/null | awk '{ printf "%s ", $2 }'
    echo ""
done 
echo ""



echo "Display dns operator configmap"
echo "------------------------------"

oc get configmap/dns-default -n openshift-dns -o yaml

echo ""
