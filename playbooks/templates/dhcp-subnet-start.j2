
subnet {{ p_network }} netmask {{ p_netmask }} {

    option domain-name         "{{ p_cluster }}.{{ p_domain }}";
    option domain-name-servers {{ p_dns }};
    option routers             {{ p_gateway }};
    option broadcast-address   {{ p_broadcast }};
    option subnet-mask         {{ p_netmask }};
{%if p_ntp is defined and p_ntp|length %}
    option ntp-servers         {{ p_ntp }};
{% endif %}

    if known {
       log (info, concat ("dhcpd-debug: CLIENT HOSTNAME: ", host-decl-name ));
       log (info, concat ("dhcpd-debug: CLIENT IP: ",       binary-to-ascii (10, 8, ".", leased-address)));
       log (info, concat ("dhcpd-debug: CLIENT MAC: ",      binary-to-ascii (16, 8, ":", substring (hardware, 1, 6))));
    }

{% if workshop_vars.bastion.dhcp_pxe == true %}
  class "pxeclients" {	

    match if substring (option vendor-class-identifier, 0, 9) = "PXEClient";

    log (info, "dhcpd-debug: CLIENT IDENTIFIER: PXEClient");

    next-server {{ p_nextsvr }};

    if exists user-class and option user-class = "iPXE" {

      log (info, "dhcpd-debug: CLIENT USER-CLASS: iPXE");
      log (info, "dhcpd-debug: CLIENT FILENAME: http://{{ p_nextsvr }}:{{ p_http_port }}/boot.ipxe");
      filename "http://{{ p_nextsvr }}:{{ p_http_port }}/boot.ipxe";

    } elsif option client-system-arch = 00:06 {

      log (info, "dhcpd-debug: CLIENT FILENAME: ipxe-i386.efi");
      filename "ipxe-i386.efi";

    } elsif option client-system-arch = 00:07 or option client-system-arch = 00:09 {

      log (info, "dhcpd-debug: CLIENT FILENAME: shimx64.efi");
      filename "/efi/shimx64.efi";

    } else {

      log (info, "dhcpd-debug: CLIENT FILENAME: undionly.kpxe");
      filename "undionly.kpxe";
    }
  }
{% endif %}

{% if workshop_vars.bastion.dhcp_uefi_http == true %}
  class "httpclients" {	

    option vendor-class-identifier "HTTPClient";
    match if substring (option vendor-class-identifier, 0, 10) = "HTTPClient";

    log (info, "dhcpd-debug: CLIENT IDENTIFIER: HTTPClient");

    log (info,concat("dhcpd-debug: CLIENT FILENAME: ",
                     "http://{{ p_nextsvr }}:{{ p_http_port }}/assets/{{ workshop_vars.clustername }}-", 
                     host-decl-name, 
                     ".iso"));

    filename = concat("http://{{ p_nextsvr }}:{{ p_http_port }}/assets/{{ workshop_vars.clustername }}-", host-decl-name, ".iso");

  }
{% endif %}

