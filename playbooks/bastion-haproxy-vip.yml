## Authors: 
##   Christoph Doerbeck
##
## Summary:
##   Constructs configuration file fragments in /etc/haproxy/config-fragments-vip/*
##   Assembles fragments to /etc/haproxy/haproxy-vip.cfg
##

---
- hosts: myBastion
  tasks:

  - name: "ocp4-workshop : bastion-haproxy-vip : ensure /etc/haproxy exists"
    file:
      path: /etc/haproxy
      mode: "0755"
      state: directory

  - name: "ocp4-workshop : bastion-haproxy-vip : clean cfg fragment directory"
    shell:
      cmd: |
        if [[ -d "/etc/haproxy/cfg-fragments-vip" ]] ; then rm -rf /etc/haproxy/cfg-fragments-vip ; fi

  - name: "ocp4-workshop : bastion-haproxy-vip create fresh cfg fragment directory"
    file:
      path: /etc/haproxy/cfg-fragments-vip
      mode: "0755"
      state: directory

  - name: "ocp4-workshop : bastion-haproxy-vip : deploy default config"
    template:
      src: "haproxy-defaults.j2"
      dest: "/etc/haproxy/cfg-fragments-vip/10-defaults.cfg"
      owner: root

  - name: "ocp4-workshop : bastion-haproxy-vip : deploy stats config"
    vars:
      - p_ip:       "{{ g_clusterVIP }}"
      - p_port:     "8404"
      - p_order:    "15"
      - p_name:     "{{ workshop_vars.clustername }}"
    template:
      src: "haproxy-stats.j2"
      dest: "/etc/haproxy/cfg-fragments-vip/{{ p_order }}-stats.cfg"
      owner: root

  - name: "ocp4-workshop : bastion-haproxy-vip : deploy api base"
    vars:
      - p_type:     "api"
      - p_ip:       "{{ g_clusterVIP }}"
      - p_port:     "6443"
      - p_order:    "20"
      - p_cname:    "{{ workshop_vars.clustername }}"
    template:
      src: "haproxy-frontend-backend.j2"
      dest: "/etc/haproxy/cfg-fragments-vip/{{ p_order }}-{{ p_type }}.cfg"
      owner: root

  - name: "ocp4-workshop : bastion-haproxy-vip : deploy api servers"
    vars:
      - p_type:     "api"
      - p_ip:       "{{ g_clusterVIP }}"
      - p_port:     "6443"
      - p_order:    "25"
      - p_item:     "{{ item }}"
      - p_name:     "{{ hostvars[item]['inventory_hostname_short']}}"
      - p_addr:     "{{ hostvars[item]['h_pubIP'] }}"
    template:
      src: "haproxy-host-entry.j2"
      dest: "/etc/haproxy/cfg-fragments-vip/{{ p_order }}-{{ p_type }}-{{ p_name }}.cfg"
      owner: root
      group: root
      mode: 644
    loop: "{{ groups['myMasters'] + groups['myBootstrap'] }}"

  - name: "ocp4-workshop : bastion-haproxy-vip : deploy config base"
    vars:
      - p_type:     "config"
      - p_ip:       "{{ g_clusterVIP }}"
      - p_port:     "22623"
      - p_order:    "30"
      - p_cname:    "{{ workshop_vars.clustername }}"
    template:
      src: "haproxy-frontend-backend.j2"
      dest: "/etc/haproxy/cfg-fragments-vip/{{ p_order }}-{{ p_type }}.cfg"
      owner: root

  - name: "ocp4-workshop : bastion-haproxy-vip : deploy config servers"
    vars:
      - p_type:     "config"
      - p_ip:       "{{ g_clusterVIP }}"
      - p_port:     "22623"
      - p_order:    "35"
      - p_item:     "{{ item }}"
      - p_name:     "{{ hostvars[item]['inventory_hostname_short']}}"
      - p_addr:     "{{ hostvars[item]['h_pubIP'] }}"
    template:
      src: "haproxy-host-entry.j2"
      dest: "/etc/haproxy/cfg-fragments-vip/{{ p_order }}-{{ p_type }}-{{ p_name }}.cfg"
      owner: root
      group: root
      mode: 644
    loop: "{{ groups['myMasters'] + groups['myBootstrap'] }}"

  - name: "ocp4-workshop : bastion-haproxy-vip : deploy http base"
    vars:
      - p_type:     "http"
      - p_ip:       "{{ g_clusterVIP }}"
      - p_port:     "80"
      - p_order:    "40"
      - p_cname:    "{{ workshop_vars.clustername }}"
    template:
      src: "haproxy-frontend-backend.j2"
      dest: "/etc/haproxy/cfg-fragments-vip/{{ p_order }}-{{ p_type }}.cfg"
      owner: root

  - name: "ocp4-workshop : bastion-haproxy-vip : deploy http servers"
    vars:
      - p_type:     "http"
      - p_ip:       "{{ g_clusterVIP }}"
      - p_port:     "80"
      - p_order:    "45"
      - p_item:     "{{ item }}"
      - p_name:     "{{ hostvars[item]['inventory_hostname_short']}}"
      - p_addr:     "{{ hostvars[item]['h_pubIP'] }}"
    template:
      src: "haproxy-host-entry.j2"
      dest: "/etc/haproxy/cfg-fragments-vip/{{ p_order }}-{{ p_type }}-{{ p_name }}.cfg"
      owner: root
      group: root
      mode: 644
    loop: "{{ groups['myWorkers'] + groups['myMasters'] }}"

  - name: "ocp4-workshop : bastion-haproxy-vip : deploy https base"
    vars:
      - p_type:     "https"
      - p_ip:       "{{ g_clusterVIP }}"
      - p_port:     "443"
      - p_order:    "50"
      - p_cname:    "{{ workshop_vars.clustername }}"
    template:
      src: "haproxy-frontend-backend.j2"
      dest: "/etc/haproxy/cfg-fragments-vip/{{ p_order }}-{{ p_type }}.cfg"
      owner: root

  - name: "ocp4-workshop : bastion-haproxy-vip : deploy https servers"
    vars:
      - p_type:     "https"
      - p_port:     "443"
      - p_ip:       "{{ g_clusterVIP }}"
      - p_order:    "55"
      - p_item:     "{{ item }}"
      - p_name:     "{{ hostvars[item]['inventory_hostname_short']}}"
      - p_addr:     "{{ hostvars[item]['h_pubIP'] }}"
    template:
      src: "haproxy-host-entry.j2"
      dest: "/etc/haproxy/cfg-fragments-vip/{{ p_order }}-{{ p_type }}-{{ p_name }}.cfg"
      owner: root
      group: root
      mode: 644
    loop: "{{ groups['myWorkers'] + groups['myMasters'] }}"

  - name: "ocp4-workshop : bastion-haproxy-vip : assemble config fragments"
    assemble:
      src: "/etc/haproxy/cfg-fragments-vip"
      dest: "/etc/haproxy/haproxy-vip.cfg"
      owner: root
      group: root
      mode: 644

