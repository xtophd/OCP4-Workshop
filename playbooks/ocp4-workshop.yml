## Authors: 
##   Christoph Doerbeck
##
## Summary:
##   This playbook intends to do the heavy lifting of configuring the bastion-host based on the paremeters defined in the
##   ansible inventory (config).
##
##   It will install missing packages, pull (wget) openshift installer, rhcos, etc...
##
## Playbook Assumptions:
##     #1 you are executing this on the bastion-host
##     #2 you have configured and copied ssh-keys to itself.  Meaning, ssh root@localhost works without a password
##     #3 you have completed adjustments to ../configs/ocp4poc-default
##

---
- hosts: myBastion
  tasks:

  - name: "ocp4-workshop : main : determine if deployment is locked '({{ workshop_extras.ocp_creds_dir }}/ocp-workshop-deployment.lock }})"
    stat: path="{{ workshop_extras.ocp_creds_dir }}/ocp-workshop-deployment.lock"
    register: deployment_lock
    tags: always

  - set_fact:
      workshop_lock: "{{ deployment_lock.stat.exists }}"
    tags: always

  - debug: var=workshop_lock
    tags: always

- import_playbook: bastion-basics.yml
  tags: basics

- import_playbook: bastion-firewalld.yml
  when: workshop_vars.bastion.firewalld|default(true) == true
  tags: firewall

- import_playbook: bastion-cockpit.yml
  when: workshop_vars.bastion.cockpit|default(false) == true
  tags: cockpit

- import_playbook: bastion-workshop-materials.yml
  when: workshop_vars.bastion.workshop_materials|default(true) == true
  tags: workshop

- import_playbook: bastion-workshop-user.yml
  when: workshop_vars.bastion.workshop_user|default(false) == true
  tags: user

- import_playbook: bastion-desktop-gui.yml
  when: workshop_vars.bastion.desktop_gui|default(false) == true
  tags: gui

- import_playbook: bastion-vnc.yml
  when: 
    - workshop_vars.bastion.desktop_vnc|default(false) == true
    - workshop_vars.bastion.workshop_user|default(false) == true
  tags: vnc

- import_playbook: bastion-desktop-chrome.yml
  when: 
    - workshop_vars.bastion.desktop_chrome|default(false)  == true
    - workshop_vars.bastion.desktop_gui == true or workshop_vars.bastion.desktop_vnc == true
  tags: gui

- import_playbook: bastion-dns.yml
  when: workshop_vars.bastion.dns|default(true) == true 
  tags: dns

- import_playbook: bastion-matchbox.yml
  when: workshop_vars.bastion.matchbox|default(true) == true
  tags: matchbox

- import_playbook: bastion-pxe.yml
  when: workshop_vars.bastion.dhcp_pxe|default(true) == true
  tags: pxe

- import_playbook: bastion-iso.yml
  when: workshop_vars.bastion.dhcp_uefi_http|default(true) == true
  tags: iso

- import_playbook: bastion-dhcp.yml
  when: workshop_vars.bastion.dhcp|default(true) == true 
  tags: dhcp

- import_playbook: bastion-haproxy.yml
  when: workshop_vars.bastion.haproxy|default(true) == true 
  tags: haproxy

#DEPRECATE 2021-07-15 - special case for libvirt NAT,
#                       not necessary since GUI and
#                       VNC now available on bastion
#
#- import_playbook: bastion-haproxy-vip.yml
#  when: g_useHAPROXY_VIP|default(true) == true
#  tags: haproxy_vip

- import_playbook: bastion-nfs.yml
  when: workshop_vars.bastion.nfs|default(true) == true
  tags: nfs

- import_playbook: bastion-httpd.yml
  when: workshop_vars.bastion.matchbox|default(true) == false
  tags: httpd

##
##    NTP needs to be configured on bastion regardless
##    of g_useNTP.  If g_useNTP is true then
##    bastion will be enabled as a source for the 
##    cluster nodes to reference
##

- import_playbook: bastion-ntp.yml
  tags: ntp

- import_playbook: bastion-squid.yml
  when: workshop_vars.bastion.squid|default(false) == true
  tags:
    - squid

- import_playbook: bastion-tests.yml
  tags: tests

- import_playbook: bastion-openshift.yml
  tags: openshift

- import_playbook: bastion-lock.yml
  tags: lock

- import_playbook: bastion-unlock.yml
  tags: 
    - never
    - unlock

