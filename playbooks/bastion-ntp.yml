## Authors: 
##   Christoph Doerbeck
##
## Summary:
##   This playbook intends to do the heavy lifting of configuring the bastion-host based on the paremeters defined in the
##   ansible inventory (config).
##
##   It will install missing packages, pull (wget) openshift installer, rhcos, etc...
##
## Playbook Assumptions:
##     #1 you are executing this on the bastion-host
##     #2 you have configured and copied ssh-keys to itself.  Meaning, ssh root@localhost works without a password
##     #3 you have completed adjustments to ../configs/ocp4poc-default
##

---
- hosts: myBastion
  tasks:



  - name: "ocp4-workshop : bastion-ntp : populate service facts"
    service_facts:



  - name: "ocp4-workshop : bastion-ntp : package installation"
    yum: name=chrony state=installed



  ##
  ##    The config should point the local bastion to
  ##    the NTP service defined in master-confg.yml AND
  ##    enable the bastion as a time service provider
  ##



  - name: "ocp4-workshop : bastion-ntp : deploy ntp/chrony config"
    vars:
      - p_ntp:       "{{ g_pubNTP }}"
      - p_network:   "{{ g_pubNET }}"
      - p_prefix:    "{{ g_pubPREFIX }}"
    template:
      src: "chrony-conf.j2"
      dest: "/etc/chrony.conf"
      owner: root
      group: root
      mode: 644

  - name: "ocp4-workshop : bastion-ntp : restart service"
    service: name=chronyd state=restarted enabled=yes

  - name: "ocp4-workshop : bastion-ntp : add firewalld service rules"
    firewalld:
      service: ntp
      immediate: yes
      permanent: yes
      state: enabled
    when: ansible_facts['services']['firewalld.service']['state'] == 'running'


