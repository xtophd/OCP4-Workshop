## Authors: 
##   Christoph Doerbeck
##
## Summary:
##   Downloads and unpacks software for OCP installation
##

---
- hosts: myBastion
  tasks:

  - name: "ocp4-workshop : bastion-openshift : Create ssh directory"
    file:
      path: /root/.ssh
      mode: "0700"
      state: directory

  - name: "ocp4-workshop : bastion-openshift : test ssh key"
    stat: path="/root/.ssh/id_rsa.pub"
    register: test_ssh_key

  - name: "ocp4-workshop : bastion-openshift : create ssh key"
    command: "ssh-keygen -t rsa -b 2048 -N '' -f /root/.ssh/id_rsa"
    when: test_ssh_key.stat.exists == false

  - name: "ocp4-workshop : bastion-openshift : download ocp software [SRC: {{ ocp_assets[workshop_vars.ocp_version]['url'] }}]"
    environment:
      http_proxy:  "{{ workshop_vars.http_proxy| default('') }}"
      https_proxy: "{{ workshop_vars.https_proxy| default('') }}"
    get_url:
      url: "{{ ocp_assets[workshop_vars.ocp_version]['url'] }}/{{ item }}"
      dest: "/usr/local/src/{{ item }}"
      mode: "0644"
    with_items:
      - "{{ ocp_assets[workshop_vars.ocp_version]['install_tar'] }}"
      - "{{ ocp_assets[workshop_vars.ocp_version]['client_tar'] }}"
    register: openshift_download
    until: openshift_download is not failed
    retries: 5


  - name: "ocp4-workshop : bastion-openshift : unpack ocp software"
    shell:
      cmd: |
        cd /usr/local/bin
        tar zxvf /usr/local/src/{{ item }}
    with_items:
      - "{{ ocp_assets[workshop_vars.ocp_version]['install_tar'] }}"
      - "{{ ocp_assets[workshop_vars.ocp_version]['client_tar'] }}"

  - name: "ocp4-workshop : bastion-openshift : additional package installation"
    yum: name=bash-completion state=installed

  - name: "ocp4-workshop : bastion-openshift : configure openshift bash completion"
    shell: 
      cmd: |
        /usr/local/bin/oc completion bash >> /etc/bash_completion.d/oc_completion
        /usr/local/bin/openshift-install completion bash >> /etc/bash_completion.d/openshift-install_completion

  ##
  ## Only execute tasks if workshop_lock == false
  ##

  - block:

      ## 
      ## Clean up installation artifacts
      ##

      - name: "ocp4-workshop : bastion-openshift : Back-up openshift installation artifacts in {{ workshop_extras.ocp_creds_dir }}"
        shell:
          cmd: |
            if [[ -d "{{ workshop_extras.ocp_creds_dir }}" ]]; 
              then mv -f "{{ workshop_extras.ocp_creds_dir }}" "{{ workshop_extras.ocp_creds_dir }}".`date +"%Y%m%d-%R"`
            fi
          removes: "{{ workshop_extras.ocp_creds_dir }}"
    
      - name: "ocp4-workshop : bastion-openshift : Clean-up kube artifacts in /root/.kube"
        file:
          path: "/root/.kube"
          state: absent
    
      - name: "ocp4-workshop : bastion-openshift : Create openshift working directory {{ workshop_extras.ocp_creds_dir }}"
        file:
          path: "{{ workshop_extras.ocp_creds_dir }}"
          mode: "0755"
          state: directory

      - name: "ocp4-workshop : bastion-openshift : Clean-up matchbox ignition directory"
        shell:
          cmd: |
            if [[ -d "/var/lib/matchbox/ignition/" ]] ; then rm -f /var/lib/matchbox/ignition/* ; fi

      ##
      ## Track down the pull secret
      ##
      ##   if    deploying via the ws-deployer, pull_secret may already be deployed
      ##   else  could be in the ./config directory per instructions
      ##   else  this is a manual step user must complete therefore show message and exit
      ##

      - name: "ocp4-workshop : bastion-openshift : maybe find pull-secret in ../config"
        copy:
          src:   "../config/pull-secret.txt" 
          dest:  "{{ workshop_extras.ocp_creds_dir }}/pull-secret.txt"
          mode:  "0644"
          owner: root
          group: root
        ignore_errors: yes
    
      - name: "ocp4-workshop : bastion-openshift : maybe find pull-secret in /root"
        copy:
          src:   "/root/{{ workshop_vars.clustername }}-pull-secret.txt" 
          dest:  "{{ workshop_extras.ocp_creds_dir }}/pull-secret.txt"
          mode:  "0644"
          owner: root
          group: root
          remote_src: yes
        ignore_errors: yes
    
      - name: "ocp4-workshop : bastion-openshift : confirm pull-secret"
        stat: path="{{ workshop_extras.ocp_creds_dir }}/pull-secret.txt"
        register: found_secret
    
      - block:
          - debug: msg="RETRIEVE PULL-SECRET https://cloud.redhat.com/openshift/install/metal/user-provisioned"
          - debug: msg="SAVE PULL-SECRET HERE ./config/pull-secret.txt"
          - fail:  msg="MISSING PULL-SECRET"
        when: 
          - found_secret.stat.exists == false
    
      - name: "ocp4-workshop : bastion-openshift : load pull secret"
        shell: cat {{ workshop_extras.ocp_creds_dir }}/pull-secret.txt
        register: pull_secret
    
      - name: "ocp4-workshop : bastion-openshift : load ssh key"
        shell: cat /root/.ssh/id_rsa.pub
        register: ssh_key

      - name: "ocp4-workshop : bastion-openshift : deploy install-config.yml"
        vars:
          - p_pullSecret:   "{{ pull_secret.stdout |quote }}"
          - p_sshKey:       "{{ ssh_key.stdout |quote }}"
          - p_clusterName:  "{{ workshop_vars.clustername }}"
          - p_domain:       "{{ workshop_vars.network_basedomain }}"
#          - p_http_proxy:   "{{ workshop_vars.http_proxy | default ('') }}"
#          - p_https_proxy:  "{{ workshop_vars.https_proxy | default ('') }}"
          - p_http_proxy:   "{{ workshop_extras.squid_http_url if workshop_vars.bastion.squid else workshop_vars.http_proxy | default ('') }}"
          - p_https_proxy:  "{{ workshop_extras.squid_https_url if workshop_vars.bastion.squid else workshop_vars.https_proxy | default ('') }}"
          - p_no_proxy:     "{{ g_no_proxy | default ('') }}"
        template:
          src: "ocp-install-config.j2"
          dest: "{{ workshop_extras.ocp_creds_dir }}/install-config.yaml"
          owner: root
          group: root
          mode: 644
    
      - name: "ocp4-workshop : bastion-openshift : Create a backup of the install-config.yaml"
        shell:
          cmd: |
            cp "{{ workshop_extras.ocp_creds_dir }}/install-config.yaml" "{{ workshop_extras.ocp_creds_dir }}/install-config.bak"

      - name: "ocp4-workshop : bastion-openshift : create ignition files"
        shell:
          cmd: |
            cd {{ workshop_extras.ocp_creds_dir }}
            /usr/local/bin/openshift-install --dir={{ workshop_extras.ocp_creds_dir }} create ignition-configs
    
      - name: "ocp4-workshop : bastion-openshift : copy ignition files"
        shell:
          cmd: |
            cp {{ workshop_extras.ocp_creds_dir }}/*.ign /var/lib/matchbox/ignition/
    
      - name: "ocp4-workshop : bastion-openshift : fix ignition file permissions"
        shell:
          cmd: |
            chown matchbox.matchbox /var/lib/matchbox/ignition/*

    when:
      - workshop_lock == false

  ## Maybe matchbox needs a refresh of content updates, so just to be safe... restart

  - name: "ocp4-workshop : bastion-openshift : restart matchbox services"
    service: name="{{ item }}" state=restarted enabled=yes daemon_reload=yes
    with_items:
      - "matchbox"
    when: workshop_vars.bastion.matchbox == true

  - name: "ocp4-workshop : bastion-openshift : DEBUG"
    debug: msg="YOU CAN NOW DEPLOY THE BOOTSTRAP"
