
---
- hosts: myBastion
  tasks:

  - name: "ocp4-workshop : workshop : install workshop-(scripts) in /usr/local/bin"
    template:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
      owner: root
      group: root
      mode: 0744
    with_items:
      - {src: 'workshop-check-health.j2',               dest: '/usr/local/bin/workshop-check-health.sh'}
      - {src: 'workshop-check-operators.j2',            dest: '/usr/local/bin/workshop-check-operators.sh'}
      - {src: 'workshop-check-version.j2',              dest: '/usr/local/bin/workshop-check-version.sh'}
      - {src: 'workshop-config-registry.j2',            dest: '/usr/local/bin/workshop-config-registry.sh'}
      - {src: 'workshop-config-identity.j2',            dest: '/usr/local/bin/workshop-config-identity.sh'}
      - {src: 'workshop-config-scheduler.j2',           dest: '/usr/local/bin/workshop-config-scheduler.sh'}
      - {src: 'workshop-rsh.j2',                        dest: '/usr/local/bin/workshop-rsh.sh'}
      - {src: 'workshop-validate-service.j2',           dest: '/usr/local/bin/workshop-validate-service.sh'}
      - {src: 'workshop-validate-app.j2',               dest: '/usr/local/bin/workshop-validate-app.sh'}
      - {src: 'workshop-patch-namespace-helloworld.j2', dest: '/usr/local/bin/workshop-patch-namespace-helloworld.sh'}
      - {src: 'workshop-kubeadmin.j2',                  dest: '/usr/local/bin/workshop-kubeadmin.sh'}



  - name: "ocp4-workshop : workshop : install workshop-(yaml's) in /usr/local/etc"
    template:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
      owner: root
      group: root
      mode: 0744
    with_items:
      - {src: 'workshop-yaml-identity.j2',      dest: '/usr/local/etc/workshop-identity.yaml'}
      - {src: 'workshop-users-htpasswd.j2',     dest: '/usr/local/etc/workshop-users.htpasswd'}

    ##
    ## This YAML needs the name of the bastion host
    ##

  - name: "ocp4-workshop : workshop :deploy workshop-registryPV.yaml in /usr/local/etc"
    vars:
      - p_server: "{{ item }}.{{ g_clusterName }}.{{ g_publicDomain }}"
      - p_path:   "{{ g_nfsExport }}"
    template:
      src: "workshop-yaml-registryPV.j2"
      dest: "/usr/local/etc/workshop-registryPV.yaml"
      owner: root
      group: root
      mode: 0744
    loop: "{{ groups['myBastion'] }}"



  - name: "ocp4-workshop : workshop : create workshopuser-username"
    user:
      name: "{{ workshopuser_username }}"
      password: "{{ workshopuser_password | password_hash('sha512') }}"
      state: present
    when:
      - (workshopuser_username is defined) and (workshopuser_username|length > 0)
      - (workshopuser_password is defined) and (workshopuser_password|length > 0)



#  - name: "ocp4-workshop : workshop : sudo configuration"
#    vars:
#      t_name: "{{ workshopuser_username }}"
#    template:
#      src: "{{ item.src }}"
#      dest: "{{ item.dest }}"
#      owner: root
#      group: root
#      mode: 0600
#    with_items:
#      - {src: 'sudoers.j2', dest: '/etc/sudoers.d/ocp4-workshop'}
#      - {src: 'sudoers-student.j2', dest: '/etc/sudoers.d/{{ t_name }}'}
#    when:
#      - (workshopuser_username is defined) and (workshopuser_username|length > 0)
#      - (workshopuser_password is defined) and (workshopuser_password|length > 0)



  - name: "ocp4-workshop : workshop : create workshopuser-username Desktop directory"
    file:
      path:  "~{{ workshopuser_username }}/Desktop"
      mode:  "0755"
      owner: "{{ workshopuser_username }}"
      group: "{{ workshopuser_username }}"
      state: directory
    when:
      - (workshopuser_username is defined) and (workshopuser_username|length > 0)
      - (workshopuser_password is defined) and (workshopuser_password|length > 0)



  - name: "ocp4-workshop : workshop : create workshopuser-username openshift console link (RHEL 7)"
    vars:
      - t_link: "console-openshift-console.{{ g_wildcardName }}.{{ g_clusterName }}.{{ g_publicDomain }}"
    template:
      src: "ocp-console-link.j2"
      dest: "~{{ workshopuser_username }}/Desktop/Openshift-Console.desktop"
      owner: "{{ workshopuser_username }}"
    when:
      - ansible_distribution == "RedHat" or ansible_distribution == "CentOS"
      - ansible_distribution_major_version == "7"
      - (workshopuser_username is defined) and (workshopuser_username|length > 0)
      - (workshopuser_password is defined) and (workshopuser_password|length > 0)



#  - name: "ocp4-workshop : workshop : enable desktop icons (RHEL 8)"
#    shell:
#      cmd: "gsettings set org.gnome.shell enabled-extensions \"['desktop-icons@gnome-shell-extensions.gcampax.github.com']\""
#    become_user: "{{ workshopuser_username }}"  
#    when:
#      - ansible_distribution == "RedHat" 
#      - ansible_distribution_major_version == "8"
#      - (workshopuser_username is defined) and (workshopuser_username|length > 0)
#      - (workshopuser_password is defined) and (workshopuser_password|length > 0)

