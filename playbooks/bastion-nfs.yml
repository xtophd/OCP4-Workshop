## Authors: 
##   Christoph Doerbeck
##
## Summary:
##   This playbook installs and configues an nfs share
##

---
- hosts: myBastion
  tasks:

  - name: "ocp4-workshop : bastion-nfs : populate service facts"
    service_facts:

  
  - name: "ocp4-workshop : bastion-nfs : package installation"
    yum: name=nfs-utils,rpcbind state=installed

  - name: "ocp4-workshop : bastion-nfs  create directory"
    file:
      path: '{{ workshop_extras.nfs_export }}'
      mode: '0755'
      owner: 65534
      group: 65534
      state: directory

  - name: "ocp4-workshop : bastion-nfs : cleanup conflicting entries in /etc/exports"
    lineinfile:
      dest:   '/etc/exports'
      regexp: '{{ workshop_extras.nfs_export }}(\s+).*$'
      state:  absent

  ##
  ## Based on documentation:
  ##   https://docs.openshift.com/container-platform/4.5/registry/configuring_registry_storage/configuring-registry-storage-baremetal.html
  ##
  ## If the storage type is NFS, you must enable the no_wdelay and root_squash mount options
  ## 

  - name: 'ocp4-workshop : bastion-nfs : update entry in /etc/exports'
    lineinfile:
      dest: '/etc/exports'
      line: '{{ workshop_extras.nfs_export }}   *(rw,sync,no_subtree_check,all_squash,anonuid=65534,anongid=65534)'
      state: present
      owner: root
      group: root
      mode: 644

  - name: 'ocp4-workshop : bastion-nfs : restart services'
    service: name={{ item }} state=restarted enabled=yes masked=no
    with_items:
      - 'nfs-server'
      - 'rpcbind'

  - name: 'ocp4-workshop : bastion-nfs : add firewalld ports and services'
    firewalld:
      service: '{{ item }}'
      immediate: yes
      permanent: yes
      state: enabled
    with_items:
      - 'nfs'
      - 'mountd'
      - 'rpc-bind'
    when: 
      - ansible_facts['services']['firewalld.service']['state'] is defined
      - ansible_facts['services']['firewalld.service']['state'] == 'running'


