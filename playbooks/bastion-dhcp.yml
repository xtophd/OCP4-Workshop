## Authors: 
##   Christoph Doerbeck
##
## Summary:
##   This playbook attempts to configure the minimum requirements.  Ideally, to prepare a blueprint you would run
##   this and then snap the blueprint for the workshops.  This playbook is NOT meant for student execution
##
## Playbook Assumptions:
##     #1 you are executing this on the bastion-host
##     #2 your client is registered to RH CDN with subscription-manager
##     #3 the following packages have been installed: git, ansible
##

---
- hosts: myBastion
  tasks:

  - debug:
      msg: "Ansible Facts: {{ ansible_distribution }} {{ ansible_distribution_major_version  }}"

  - name: "ocp4-workshop : bastion-dhcp : package installation (RHEL8)"
    yum: name=dhcp-server state=installed
    when:
      - ansible_distribution == "RedHat"
      - ansible_distribution_major_version == "8"
  
  - name: "ocp4-workshop : bastion-dhcp : package installation (RHEL7)"
    yum: name=dhcp state=installed
    when:
      - ansible_distribution == "RedHat" or ansible_distribution == "CentOS"
      - ansible_distribution_major_version == "7"

  - name: "ocp4-workshop : bastion-dhcp : clean cfg fragments directory"
    shell:
      cmd: |
        if [[ -d "/etc/dhcp/cfg-fragments" ]] ; then rm -rf /etc/dhcp/cfg-fragments ; fi

  - name: "ocp4-workshop : bastion-dhcp : create cfg fragments directory"
    file:
      path: /etc/dhcp/cfg-fragments
      mode: "0755"
      state: directory

  ## We will need facts about the bastion host below, so save them

  - name: "ocp4-workshop : bastion-dhcp : determine bastion pub IP"
    set_fact:
      f_bastionName: "{{ hostvars[item]['inventory_hostname_short']}}"
      f_bastionIP:   "{{ hostvars[item]['h_pubIP'] }}"
    loop: "{{ groups['myBastion'] }}"

  - name: "ocp4-workshop : bastion-dhcp : deploy standard options"
    template:
      src: "dhcp-standard-opts.j2"
      dest: "/etc/dhcp/cfg-fragments/10-standard-opts.conf"
      owner: root

  - name: "ocp4-workshop : bastion-dhcp : deploy PUBLIC SUBNET config frament"
    vars:
      - p_nextsvr:   "{{ f_bastionIP }}"
      - p_network:   "{{ g_pubNET }}"
      - p_netmask:   "{{ g_pubNM }}"
      - p_broadcast: "{{ g_pubBC }}"
      - p_gateway:   "{{ g_pubGW }}"
      - p_dns:       "{{ f_bastionIP }}"
      - p_ntp:       "{{ f_bastionIP if g_useNTP == true else g_pubNTP }}"
      - p_domain:    "{{ g_publicDomain }}"
      - p_cluster:   "{{ g_clusterName }}"
      - p_http_port: "{{ matchbox.port }}"
    template:
      src: "dhcp-subnet-start.j2"
      dest: "/etc/dhcp/cfg-fragments/20-subnet-start.conf"
      owner: root
      group: root
      mode: 644

  - name: "ocp4-workshop : bastion-dhcp : deploy dhcp group start"
    vars:
      - p_dhcpgroup: "{{ g_clusterName }}"
    template:
      src: "dhcp-group-start.j2"
      dest: "/etc/dhcp/cfg-fragments/30-group-start.conf"
      owner: root

  - name: "ocp4-workshop : bastion-dhcp : deploy host config framents"
    vars:
      - p_item:      "{{ item }}"
      - p_nextsvr:   "{{ f_bastionIP }}"
      - p_name:      "{{ hostvars[item]['inventory_hostname_short']}}"
      - p_addr:      "{{ hostvars[item]['h_pubIP'] }}"
      - p_mac:       "{{ hostvars[item]['h_pubMAC'] }}"
      - p_network:   "{{ g_pubNet }}"
      - p_netmask:   "{{ g_pubNM }}"
      - p_broadcast: "{{ g_pubBC }}"
      - p_gateway:   "{{ g_pubGW }}"
      - p_dns:       "{{ g_pubDNS }}"
      - p_domain:    "{{ g_publicDomain }}"
      - p_cluster:   "{{ g_clusterName }}"
      - p_http_port: "{{ matchbox.port }}"
    template:
      src: "dhcp-host-entry.j2"
      dest: "/etc/dhcp/cfg-fragments/40-host-{{ p_domain }}-{{ p_name }}.conf"
      owner: root
      group: root
      mode: 644
    loop: "{{ groups['myWorkers'] + groups['myMasters'] + groups['myBootstrap'] }}"

  - name: "ocp4-workshop : bastion-dhcp : deploy dhcp group finish"
    vars:
      - p_dhcpgroup: "{{ g_clusterName }}"
    template:
      src: "dhcp-group-finish.j2"
      dest: "/etc/dhcp/cfg-fragments/50-group-finish.conf"
      owner: root

  - name: "ocp4-workshop : bastion-dhcp : deploy PUBLIC SUBNET config frament"
    vars:
      - p_item:      "{{ item }}"
      - p_nextsvr:   "{{ f_bastionIP }}"
      - p_network:   "{{ g_pubNET }}"
      - p_netmask:   "{{ g_pubNM }}"
      - p_broadcast: "{{ g_pubBC }}"
      - p_gateway:   "{{ g_pubGW }}"
      - p_dns:       "{{ f_bastionIP }}"
      - p_ntp:       "{{ g_pubNTP }}"
      - p_domain:    "{{ g_publicDomain }}"
      - p_cluster:   "{{ g_clusterName }}"
    template:
      src: "dhcp-subnet-finish.j2"
      dest: "/etc/dhcp/cfg-fragments/60-subnet-finish.conf"
      owner: root
      group: root
      mode: 644

  - name: "ocp4-workshop : bastion-dhcp : assemble config fragments"
    assemble:
      src: "/etc/dhcp/cfg-fragments"
      dest: "/etc/dhcp/dhcpd.conf"
      owner: root
      group: root
      mode: 644

  - name: "ocp4-workshop : bastion-dhcp : restart services"
    service: name={{ item }} state=restarted enabled=yes masked=no
    when: g_usePXE == true
    with_items:
      - "dhcpd"

  - name: "ocp4-workshop : bastion-dhcp : add firewalld ports and services"
    firewalld:
      service: "{{ item }}"
      immediate: yes
      permanent: yes
      state: enabled
    with_items:
      - "dhcp"
